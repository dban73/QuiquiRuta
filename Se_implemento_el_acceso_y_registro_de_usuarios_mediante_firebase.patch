Index: app/src/main/java/com/example/quirquirutas/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/quirquirutas/MainActivity.java	(date 1570771768000)
+++ app/src/main/java/com/example/quirquirutas/MainActivity.java	(date 1570931207068)
@@ -1,23 +1,137 @@
 package com.example.quirquirutas;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 
+import android.app.ProgressDialog;
 import android.content.Intent;
 import android.os.Bundle;
+import android.text.TextUtils;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthResult;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseAuthUserCollisionException;
+import com.google.firebase.auth.FirebaseUser;
 
 import java.nio.channels.InterruptedByTimeoutException;
 
 public class MainActivity extends AppCompatActivity {
-    Button btn_ing;
+     private EditText textcorreo,textpassword;
+     private ProgressDialog progressDialog;
+    //Declaracion de objeto Firebase
+     FirebaseAuth firebaseAuth;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
+
+        //inicializamos el objeto firebaseAuth
+        firebaseAuth = FirebaseAuth.getInstance();
+        //referencias view
+        textcorreo = (EditText) findViewById(R.id.txt_correo);
+        textpassword = (EditText) findViewById(R.id.txt_password);
+        progressDialog = new ProgressDialog(this);
     }
+    public void registrarUsuario(View view){
+        //Obtenemos el email y la contraseña desde las cajas de texto
+        String email = textcorreo.getText().toString().trim();
+        //trim() elimina espacios de la cadena
+        String password = textpassword.getText().toString().trim();
+        //Verificamos que las cajas de texto no esten vacias
+        if (TextUtils.isEmpty(email)) {
+            Toast.makeText(this,"Debe Ingresar un Correo Valido"
+            ,Toast.LENGTH_LONG).show();
+            return;
+        }
+        if (TextUtils.isEmpty(password)) {
+            Toast.makeText(this,"Debe Ingresar una Contraseña"
+                    ,Toast.LENGTH_LONG).show();
+            return;
+        }
+        progressDialog.setMessage("Realizando Registro");
+        progressDialog.show();
+        //Creando un nuevo Usuario
+        firebaseAuth.createUserWithEmailAndPassword(email, password)
+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            // Sign in success, update UI with the signed-in user's information
+                            Toast.makeText(MainActivity.this, "Registro Exitoso.",
+                                    Toast.LENGTH_SHORT).show();
+                        } else {
+                            if(task.getException() instanceof FirebaseAuthUserCollisionException){
+                                //si el usuario ya esta creado
+                                Toast.makeText(MainActivity.this, "El usuario ya existe",
+                                        Toast.LENGTH_SHORT).show();
+                            }else {
+                                // If sign in fails, display a message to the user.
+                                Toast.makeText(MainActivity.this, "Error al Registrar Usuario",
+                                        Toast.LENGTH_SHORT).show();
+                            }
+                        }
+                        progressDialog.dismiss();
+
+                        // ...
+                    }
+                });
+    }
+    //Loguear
     public void siguiente(View view){
-        Intent i = new Intent(this,MapsActivity1.class);
-        startActivity(i);
+
+        //Obtenemos el email y la contraseña desde las cajas de texto
+        String email = textcorreo.getText().toString().trim();
+        //trim() elimina espacios de la cadena
+        String password = textpassword.getText().toString().trim();
+        //Verificamos que las cajas de texto no esten vacias
+        if (TextUtils.isEmpty(email)) {
+            Toast.makeText(this,"Debe Ingresar un Correo Valido"
+                    ,Toast.LENGTH_LONG).show();
+            return;
+        }
+        if (TextUtils.isEmpty(password)) {
+            Toast.makeText(this,"Debe Ingresar una Contraseña"
+                    ,Toast.LENGTH_LONG).show();
+            return;
+        }
+        progressDialog.setMessage("Realizando Registro");
+        progressDialog.show();
+        //Logear  Usuario
+        firebaseAuth.signInWithEmailAndPassword(email, password)
+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            // Sign in success, update UI with the signed-in user's information
+                            Toast.makeText(MainActivity.this, "Bienvenido.",
+                                    Toast.LENGTH_SHORT).show();
+                            Intent intent = new Intent(getApplicationContext(),MapsActivity1.class);
+                            startActivity(intent);
+                        } else {
+                            if(task.getException() instanceof FirebaseAuthUserCollisionException){
+                                //si el usuario ya esta creado
+                                Toast.makeText(MainActivity.this, "contraseña erronea",
+                                        Toast.LENGTH_SHORT).show();
+
+                            }else {
+                                // If sign in fails, display a message to the user.
+                                Toast.makeText(MainActivity.this, "Error en los datos",
+                                        Toast.LENGTH_SHORT).show();
+                            }
+                        }
+                        progressDialog.dismiss();
+
+                        // ...
+                    }
+                });
+        //Intent i = new Intent(this,MapsActivity1.class);
+        //startActivity(i);
     }
 }
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(date 1570771768000)
+++ app/src/main/res/layout/activity_main.xml	(date 1570844461804)
@@ -93,7 +93,7 @@
         android:layout_width="0dp"
         android:layout_height="wrap_content"
         android:layout_marginStart="32dp"
-        android:layout_marginTop="64dp"
+        android:layout_marginTop="32dp"
         android:layout_marginEnd="32dp"
         android:background="@drawable/btn_rounded"
         android:onClick="siguiente"
@@ -108,10 +108,11 @@
         android:layout_width="0dp"
         android:layout_height="wrap_content"
         android:layout_marginStart="32dp"
-        android:layout_marginTop="32dp"
+        android:layout_marginTop="16dp"
         android:layout_marginEnd="32dp"
-        android:text="@string/btn_registro"
         android:background="@drawable/btn_rouded_border"
+        android:onClick="registrarUsuario"
+        android:text="@string/btn_registro"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(date 1570771768000)
+++ app/src/main/AndroidManifest.xml	(date 1570841548223)
@@ -8,7 +8,7 @@
          location permissions for the 'MyLocation' functionality.
     -->
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-
+    <uses-permission android:name="android.permission.INTERNET" />
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(date 1570771768000)
+++ app/build.gradle	(date 1570845517551)
@@ -25,6 +25,7 @@
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
     implementation 'com.google.firebase:firebase-analytics:17.2.0'
     implementation 'com.google.android.gms:play-services-maps:17.0.0'
+    implementation 'com.google.firebase:firebase-auth:19.1.0'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.1'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/google-services.json	(date 1570771768000)
+++ app/google-services.json	(date 1570840649607)
@@ -15,6 +15,14 @@
       },
       "oauth_client": [
         {
+          "client_id": "551193300054-duriupq3rtm178o8g60tlhr2b5c0nvfg.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.quirquirutas",
+            "certificate_hash": "04dc2333d3bbb3274091fc52f1d73046ca692354"
+          }
+        },
+        {
           "client_id": "551193300054-f7ruhjt8u6apt17mu8f3oiajd3trlka1.apps.googleusercontent.com",
           "client_type": 3
         }
